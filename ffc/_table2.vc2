*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="_table2.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS _dialogbutton AS _commandbutton OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "_table2.h"
	*<DefinedPropArrayMethod>
		*m: dodialog		&& Creates dialog for data operation such as find, goto, sort, etc.
		*m: setdialogpems
		*p: cclass		&& Name of class to create.
		*p: cclasslib		&& Name of classlibrary.
		*p: cparms
		*p: lmodal
		*p: odialog
	*</DefinedPropArrayMethod>

	Caption = "\<Run..."
	cclass = 		&& Name of class to create.
	cclasslib = 		&& Name of classlibrary.
	cparms = 
	lmodal = .T.
	Name = "_dialogbutton"
	odialog = .NULL.
	
	PROCEDURE Click
		THIS.DoDialog()
	ENDPROC

	PROCEDURE Destroy
		THIS.oDialog=null
	ENDPROC

	PROCEDURE dodialog		&& Creates dialog for data operation such as find, goto, sort, etc.
		LOCAL lcfile, lcclass, lnModal
		IF !EMPTY(THIS.cClasslib)
			lcfile = FULLPATH(THIS.cClasslib)
		ELSE
			lcfile = FULLPATH(THIS.ClassLibrary)
		ENDIF
		IF NOT FILE(lcfile)
		   WAIT WINDOW ERR_NOVCXLIB_LOC
		   RETURN .F.
		ENDIF
		lcclass = THIS.cClass
		IF EMPTY(lcclass)
		   WAIT WINDOW ERR_NOCLASS_LOC
		   RETURN .F.
		ENDIF
		IF EMPTY(THIS.cParms) AND VARTYPE(THIS.cParms)="C"
			THIS.oDialog = NEWOBJECT(lcclass,lcfile)
		ELSE
			THIS.oDialog = NEWOBJECT(lcclass,lcfile,"",THIS.cParms)
		ENDIF
		IF VARTYPE(THIS.oDialog)="O"
			lnModal = IIF(THIS.lModal,1,0)
			THIS.SetDialogPEMs()	&&abstract method
			THIS.oDialog.Show(lnModal)
		ENDIF
		
	ENDPROC

	PROCEDURE setdialogpems
	ENDPROC

ENDDEFINE

DEFINE CLASS _filterbutton AS _dialogbutton OF "_table2.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: cexprclass
		*p: cfilterclass
		*p: lexprdialog
	*</DefinedPropArrayMethod>

	Caption = "\<Filter..."
	cclass = _filterdialog
	cclasslib = (IIF(VERSION(2)=0,"",HOME()+"FFC\")+"_table.vcx")
	cexprclass = _filterexpr
	cfilterclass = _filterdialog
	Name = "_filterbutton"
	
	PROCEDURE dodialog
		THIS.cClass = IIF(THIS.lExprDialog,THIS.cExprClass,THIS.cFilterClass)
		DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS _goto AS _container OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cusTableNav" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="spnGoTo" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: gorecord		&& Goes to specified record in spinner.
		*m: initdata		&& Initializes data source.
	*</DefinedPropArrayMethod>

	BorderWidth = 0
	Height = 22
	Name = "_goto"
	Width = 84

	ADD OBJECT 'cusTableNav' AS _tablenav WITH ;
		Left = 48, ;
		Name = "cusTableNav", ;
		Top = 24
		*< END OBJECT: ClassLib="_table.vcx" BaseClass="custom" />

	ADD OBJECT 'spnGoTo' AS _spinner WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Format = "", ;
		Height = 22, ;
		Increment = 1.00, ;
		InputMask = "9999999999", ;
		Left = 0, ;
		Name = "spnGoTo", ;
		Top = 0, ;
		Width = 84
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="spinner" />
	
	PROCEDURE gorecord		&& Goes to specified record in spinner.
		THIS.cusTableNav.GoToRecord(THIS.spnGoTo.Value)
		* we may not have moved but we may have reverted data
		* so we have to refresh whether the pointer has moved or not
		
		THIS.cusTableNav.RefreshLastWindowAfterChange()
		
	ENDPROC

	PROCEDURE Init
		THIS.InitData()
	ENDPROC

	PROCEDURE initdata		&& Initializes data source.
		LOCAL llReturn
		IF EMPTY(THIS.cusTableNav.cAlias) OR ;
		    NOT USED(THIS.cusTableNav.cAlias) OR ;
		    RECCOUNT(THIS.cusTableNav.cAlias) < 2
		     llReturn = .F.
		ELSE
		     WITH THIS.spnGoTo
		     	STORE 1 TO .SpinnerLowValue, .KeyBoardLowValue
		     	 STORE RECCOUNT(THIS.cusTableNav.cAlias) TO ;
		                  .SpinnerHighValue, .KeyBoardHighValue
		       .Value = RECNO(THIS.cusTableNav.cAlias)
		       .Value = MIN(.Value,.SpinnerHighValue) && EOF()
		      ENDWITH
		ENDIF
		RETURN llReturn
		
	ENDPROC

	PROCEDURE cusTableNav.Init
		LOCAL llReturn
		llReturn = DODEFAULT()
		IF llReturn
		   THIS.cAlias = THIS.GetCurrentAlias()
		ENDIF
		RETURN llReturn
	ENDPROC

	PROCEDURE spnGoTo.InteractiveChange
		THIS.Parent.GoRecord()
	ENDPROC

	PROCEDURE spnGoTo.Refresh
		DO CASE
		CASE EMPTY(THIS.Parent.cusTableNav.cAlias) AND EMPTY(ALIAS())
			RETURN
		CASE EMPTY(THIS.Parent.cusTableNav.cAlias)
			THIS.Value = RECNO()
		CASE SELECT(THIS.Parent.cusTableNav.cAlias)=0
			RETURN
		OTHERWISE
			THIS.Value = RECNO(THIS.Parent.cusTableNav.cAlias)
		ENDCASE
	ENDPROC

ENDDEFINE

DEFINE CLASS _gotobutton AS _dialogbutton OF "_table2.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "\<Go To..."
	cclass = _gotodialog
	cclasslib = (IIF(VERSION(2)=0,"",HOME()+"FFC\")+"_table.vcx")
	Name = "_gotobutton"

ENDDEFINE

DEFINE CLASS _locatebutton AS _dialogbutton OF "_table2.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "\<Locate..."
	cclass = _finddialog
	cclasslib = (IIF(VERSION(2)=0,"",HOME()+"FFC\")+"_table.vcx")
	Name = "_locatebutton"

ENDDEFINE

DEFINE CLASS _nav2picbuttons AS _nav2buttons OF "_table.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 36
	Name = "_nav2picbuttons"
	Width = 71
	cmgNav.Command1.AutoSize = .F.
	cmgNav.Command1.Caption = ""
	cmgNav.Command1.Height = 24
	cmgNav.Command1.Left = 5
	cmgNav.Command1.Name = "Command1"
	cmgNav.Command1.Picture = graphics\previous.bmp
	cmgNav.Command1.ToolTipText = "Previous Record"
	cmgNav.Command1.Top = 5
	cmgNav.Command1.Width = 24
	cmgNav.Command2.AutoSize = .F.
	cmgNav.Command2.Caption = ""
	cmgNav.Command2.Height = 24
	cmgNav.Command2.Left = 29
	cmgNav.Command2.Name = "Command2"
	cmgNav.Command2.Picture = graphics\next.bmp
	cmgNav.Command2.ToolTipText = "Next Record"
	cmgNav.Command2.Top = 5
	cmgNav.Command2.Width = 24
	cmgNav.Height = 34
	cmgNav.Left = 8
	cmgNav.Name = "cmgNav"
	cmgNav.Top = 0
	cmgNav.Width = 57
	cusTableNav.Name = "cusTableNav"

ENDDEFINE

DEFINE CLASS _nav4picbuttons AS _nav4buttons OF "_table.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 38
	Name = "_nav4picbuttons"
	Width = 118
	cmdBottom.AutoSize = .F.
	cmdBottom.Caption = ""
	cmdBottom.Height = 24
	cmdBottom.Left = 85
	cmdBottom.Name = "cmdBottom"
	cmdBottom.Picture = graphics\bottom.bmp
	cmdBottom.TabIndex = 3
	cmdBottom.ToolTipText = "Last Record"
	cmdBottom.Top = 5
	cmdBottom.Width = 24
	cmdTop.AutoSize = .F.
	cmdTop.Caption = ""
	cmdTop.Height = 24
	cmdTop.Left = 13
	cmdTop.Name = "cmdTop"
	cmdTop.Picture = graphics\top.bmp
	cmdTop.TabIndex = 1
	cmdTop.ToolTipText = "First Record"
	cmdTop.Top = 5
	cmdTop.Width = 24
	cmgNav.Command1.AutoSize = .F.
	cmgNav.Command1.Caption = ""
	cmgNav.Command1.Height = 24
	cmgNav.Command1.Left = 29
	cmgNav.Command1.Name = "Command1"
	cmgNav.Command1.Picture = graphics\previous.bmp
	cmgNav.Command1.ToolTipText = "Previous Record"
	cmgNav.Command1.Top = 5
	cmgNav.Command1.Width = 24
	cmgNav.Command2.AutoSize = .F.
	cmgNav.Command2.Caption = ""
	cmgNav.Command2.Height = 24
	cmgNav.Command2.Left = 53
	cmgNav.Command2.Name = "Command2"
	cmgNav.Command2.Picture = graphics\next.bmp
	cmgNav.Command2.ToolTipText = "Next Record"
	cmgNav.Command2.Top = 5
	cmgNav.Command2.Width = 24
	cmgNav.Height = 33
	cmgNav.Left = 8
	cmgNav.Name = "cmgNav"
	cmgNav.TabIndex = 2
	cmgNav.Top = 0
	cmgNav.Width = 106
	cusTableNav.Name = "cusTableNav"

ENDDEFINE

DEFINE CLASS _navmenu AS _container OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oMenu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oNav" UniqueID="" Timestamp="" />

	#INCLUDE "_table2.h"
	*<DefinedPropArrayMethod>
		*m: addrecord		&& Adds a new record.
		*m: deleterecord		&& Deletes current record.
		*m: dodialog		&& Brings up a specific dialog.
		*m: dofilter		&& Brings up filter dialog.
		*m: dofilter2		&& Brings up advanced filter dialog.
		*m: dogoto		&& Brings up Goto dialog.
		*m: domenu		&& Runs menu routine.
		*m: dosort		&& Brings up sort dialog.
		*m: refreshform		&& Refreshes the active form when data updated.
		*m: setmenu		&& Sets up menu.
		*p: cclass		&& Class for specific dialog.
		*p: cclasslib		&& Class library for specific dialog.
	*</DefinedPropArrayMethod>

	BackColor = 0,0,255
	BackStyle = 0
	BorderWidth = 0
	cclass = 		&& Class for specific dialog.
	cclasslib = 		&& Class library for specific dialog.
	Height = 27
	Name = "_navmenu"
	Visible = .F.
	Width = 74

	ADD OBJECT 'oMenu' AS _shortcutmenu WITH ;
		Height = 15, ;
		Left = 12, ;
		Name = "oMenu", ;
		Top = 5, ;
		Width = 18
		*< END OBJECT: ClassLib="_menu.vcx" BaseClass="custom" />

	ADD OBJECT 'oNav' AS _tablenav WITH ;
		Height = 16, ;
		Left = 48, ;
		Name = "oNav", ;
		Top = 6, ;
		Width = 24
		*< END OBJECT: ClassLib="_table.vcx" BaseClass="custom" />
	
	PROCEDURE addrecord		&& Adds a new record.
		APPEND BLANK
		THIS.RefreshForm()
		
	ENDPROC

	PROCEDURE deleterecord		&& Deletes current record.
		IF MESSAGEBOX(C_DELREC_LOC,MB_QUESTIONYESNO) = MB_ISYES
			DELETE
			SKIP
			IF EOF()
				GO BOTTOM
			ENDIF
			THIS.RefreshForm()
		ENDIF
		
	ENDPROC

	PROCEDURE dodialog		&& Brings up a specific dialog.
		LOCAL lcfile, loDialog, lcclass
		
		IF !EMPTY(THIS.cClasslib)
			lcfile = FULLPATH(THIS.cClasslib)
		ELSE
			lcfile = FULLPATH(THIS.ClassLibrary)
		ENDIF
		IF NOT FILE(lcfile)
		   WAIT WINDOW ERR_NOVCXLIB_LOC
		   RETURN .F.
		ENDIF
		lcclass = THIS.cClass
		IF EMPTY(lcclass)
		   WAIT WINDOW ERR_NOCLASS_LOC
		   RETURN .F.
		ENDIF
		loDialog = NEWOBJECT(lcclass,lcfile)
		loDialog.Show(1)
		
	ENDPROC

	PROCEDURE dofilter		&& Brings up filter dialog.
		THIS.cClass = "_filterdialog"
		THIS.cClassLib =IIF(VERSION(2)=0,"",HOME()+"FFC\")+"_table.vcx"
		THIS.DoDialog()
		
	ENDPROC

	PROCEDURE dofilter2		&& Brings up advanced filter dialog.
		THIS.cClass = "_filterexpr"
		THIS.cClassLib =IIF(VERSION(2)=0,"",HOME()+"FFC\")+"_table.vcx"
		THIS.DoDialog()
		
	ENDPROC

	PROCEDURE dogoto		&& Brings up Goto dialog.
		THIS.cClass = "_gotodialog"
		THIS.cClassLib =IIF(VERSION(2)=0,"",HOME()+"FFC\")+"_table.vcx"
		THIS.DoDialog()
		
	ENDPROC

	PROCEDURE domenu		&& Runs menu routine.
		IF EMPTY(ALIAS())
			RETURN
		ENDIF
		
		PRIVATE oTHIS
		oTHIS = THIS
		THIS.oMenu.showmenu()
		THIS.RefreshForm()
		
	ENDPROC

	PROCEDURE dosort		&& Brings up sort dialog.
		THIS.cClass = "_sortdialog"
		THIS.cClassLib = THIS.ClassLibrary
		THIS.DoDialog()
		
	ENDPROC

	PROCEDURE Error
		LPARAMETERS nerror,cmethod,nline
		DO CASE
		CASE nError = 5  &&record out of range
			IF EOF()
				GO BOTTOM
			ELSE
				GO TOP
			ENDIF
		CASE nError = 1884 AND 	CURSORGETPROP("buffering")=1
			* Uniqueness ID error
			MESSAGEBOX(ERR_UNIQUEKEY_LOC)
		CASE nError = 1884	
			IF MESSAGEBOX(ERR_UNIQUEKEY_LOC+" "+ERR_UNIQUEKEY2_LOC,36)=6
				TABLEREVERT(.T.)
			ENDIF
		ENDCASE
	ENDPROC

	PROCEDURE Init
		THIS.SetMenu()
		
	ENDPROC

	PROCEDURE refreshform		&& Refreshes the active form when data updated.
		IF VARTYPE(_SCREEN.ActiveForm)="O"
			_SCREEN.ActiveForm.Refresh
		ENDIF
		
	ENDPROC

	PROCEDURE setmenu		&& Sets up menu.
		LOCAL oGoMenu
		oGoMenu = THIS.oMenu.NewMenu()
		WITH oGoMenu
			.AddMenuBar(MENU_TOP_LOC,"oTHIS.oNav.GoTop()")
			.AddMenuBar(MENU_BOTTOM_LOC,"oTHIS.oNav.GoBottom()")
			.AddMenuBar(MENU_NEXT_LOC,"oTHIS.oNav.GoNext()")
			.AddMenuBar(MENU_PREV_LOC,"oTHIS.oNav.GoPrevious()")
			.AddMenuBar(MENU_RECORD_LOC,"oTHIS.DoGoto")
		ENDWITH
		
		WITH THIS.oMenu
			.AddMenuBar(MENU_GOTO_LOC,oGoMenu)
			.AddMenuSeparator
			.AddMenuBar(MENU_ADD_LOC,"oTHIS.AddRecord")
			.AddMenuBar(MENU_DELETE_LOC,"oTHIS.DeleteRecord")
			.AddMenuSeparator
			.AddMenuBar(MENU_SORT_LOC,"oTHIS.DoSort")
			.AddMenuBar(MENU_FILTER_LOC,"oTHIS.DoFilter")
			.AddMenuBar(MENU_FILTER2_LOC,"oTHIS.DoFilter2")
		ENDWITH
	ENDPROC

ENDDEFINE

DEFINE CLASS _navtoolbarclass AS _container OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="tmrCheckToolbar" UniqueID="" Timestamp="" />

	#INCLUDE "_table2.h"
	*<DefinedPropArrayMethod>
		*p: cclass
		*p: cclasslib
		*p: ldocked
		*p: nlastleft
		*p: nlasttop
		*p: otoolbar
	*</DefinedPropArrayMethod>

	BackStyle = 0
	BorderWidth = 0
	cclass = _tbrnavigation
	cclasslib = 
	Height = 24
	Name = "_navtoolbarclass"
	otoolbar = 
	Width = 21

	ADD OBJECT 'tmrCheckToolbar' AS _timer WITH ;
		Height = 23, ;
		Left = 0, ;
		Name = "tmrCheckToolbar", ;
		Top = 0, ;
		Width = 23
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="timer" />
	
	PROCEDURE Destroy
		IF VARTYPE(THIS.oToolbar)="O"
			THIS.oToolbar.Name = SYS(2015)
			INKEY(.1)
			THIS.oToolbar.Release
			THIS.oToolbar = null
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		LOCAL lcfile, lcclass, lhastoolbar,i
		lhastoolbar = .F.
		
		* Check if toolbar already exists...
		FOR i = 1 TO _VFP.FORMS.COUNT
			IF UPPER(_VFP.FORMS[m.i].NAME)==UPPER(THIS.cClass)
				lhastoolbar = .T.
				EXIT
			ENDIF
		ENDFOR
		
		IF !EMPTY(THIS.cClasslib)
			lcfile = FULLPATH(THIS.cClasslib)
		ELSE
			lcfile = FULLPATH(THIS.ClassLibrary)
		ENDIF
		IF NOT FILE(lcfile)
		   WAIT WINDOW ERR_NOVCXLIB_LOC
		   RETURN .F.
		ENDIF
		lcclass = THIS.cClass
		IF EMPTY(lcclass)
		   WAIT WINDOW ERR_NOCLASS_LOC
		   RETURN .F.
		ENDIF
		THIS.oToolbar = NEWOBJECT(lcclass,lcfile)
		
		IF !m.lhastoolbar
			THIS.oToolbar.Show()
		ELSE
			THIS.oToolbar.Visible = .F.
			THIS.tmrCheckToolbar.Interval = 500
		ENDIF
		
	ENDPROC

	PROCEDURE tmrCheckToolbar.Timer
		* Check if toolbar still exists...
		LOCAL oForm,i
		FOR i = 1 TO _VFP.FORMS.COUNT
			oForm = _VFP.FORMS[m.i]
			IF TYPE("oForm ")#"U" AND;
			  UPPER(oForm.NAME)==UPPER(THIS.Parent.cClass);
			  AND oForm.Visible
			  	WITH THIS.Parent
					.nLastTop = oForm.Top 
					.nLastLeft = oForm.Left
					.lDocked = oForm.Docked
				ENDWITH
				RETURN
			ENDIF
		ENDFOR
		
		THIS.Interval = 0
		THIS.Parent.oToolbar.Top = THIS.Parent.nLastTop 
		THIS.Parent.oToolbar.Left = THIS.Parent.nLastLeft 
		IF THIS.Parent.lDocked
			THIS.Parent.oToolbar.Dock(0)
		ENDIF
		THIS.Parent.oToolbar.Show()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS _sortbutton AS _dialogbutton OF "_table2.vcx" 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "\<Sort..."
	cclass = _sortdialog
	Name = "_sortbutton"

ENDDEFINE

DEFINE CLASS _sortdialog AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="_shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgDirection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="_cboTags" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="_label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="_label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cusTableSort" UniqueID="" Timestamp="" />

	#INCLUDE "_table2.h"
	*<DefinedPropArrayMethod>
		*m: dosort		&& Runs sort routine.
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	Caption = "Sort"
	DoCreate = .T.
	Height = 107
	Name = "_sortdialog"
	Width = 324

	ADD OBJECT '_cboTags' AS _combobox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 20, ;
		Name = "_cboTags", ;
		Style = 2, ;
		TabIndex = 1, ;
		Top = 32, ;
		Width = 192
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="combobox" />

	ADD OBJECT '_label1' AS _label WITH ;
		AutoSize = .T., ;
		Caption = "Sort direction:", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Left = 236, ;
		Name = "_label1", ;
		TabIndex = 5, ;
		Top = 12
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="label" />

	ADD OBJECT '_label2' AS _label WITH ;
		AutoSize = .T., ;
		Caption = "Select field:", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Left = 16, ;
		Name = "_label2", ;
		TabIndex = 6, ;
		Top = 12
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="label" />

	ADD OBJECT '_shape1' AS _shape WITH ;
		Height = 50, ;
		Left = 10, ;
		Name = "_shape1", ;
		SpecialEffect = 0, ;
		Top = 19, ;
		Width = 212
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="shape" />

	ADD OBJECT 'cmdCancel' AS _commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 244, ;
		Name = "cmdCancel", ;
		TabIndex = 4, ;
		Top = 78, ;
		Width = 72
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSort' AS _commandbutton WITH ;
		Caption = "\<Sort", ;
		Default = .T., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 169, ;
		Name = "cmdSort", ;
		TabIndex = 3, ;
		Top = 78, ;
		Width = 72
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cusTableSort' AS _tablesort WITH ;
		Left = 48, ;
		Name = "cusTableSort", ;
		Top = 72
		*< END OBJECT: ClassLib="_table.vcx" BaseClass="custom" />

	ADD OBJECT 'opgDirection' AS _optiongroup WITH ;
		Height = 51, ;
		Left = 232, ;
		Name = "opgDirection", ;
		TabIndex = 2, ;
		Top = 19, ;
		Width = 84, ;
		Option1.AutoSize = .F., ;
		Option1.Caption = "", ;
		Option1.Height = 32, ;
		Option1.Left = 11, ;
		Option1.Name = "Option1", ;
		Option1.Picture = graphics\sortup.bmp, ;
		Option1.Style = 1, ;
		Option1.Top = 10, ;
		Option1.Width = 32, ;
		Option2.AutoSize = .F., ;
		Option2.Caption = "", ;
		Option2.Height = 32, ;
		Option2.Left = 43, ;
		Option2.Name = "Option2", ;
		Option2.Picture = graphics\sortdown.bmp, ;
		Option2.Style = 1, ;
		Option2.Top = 10, ;
		Option2.Width = 32
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="optiongroup" />
	
	PROCEDURE dosort		&& Runs sort routine.
		IF ALLTRIM(THIS._cboTags.Value) = C_NONE_LOC
			SET ORDER TO
		ELSE
			THIS.cusTableSort.DoSort(,,ALLTRIM(THIS._cboTags.Value),THIS.opgDirection.Value#1)
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		IF EMPTY(ALIAS())
			RETURN .F.
		ENDIF
		IF TYPE("THIS._cboTags.Baseclass")#"C"
			RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE cmdCancel.Click
		THISFORM.Release
		
	ENDPROC

	PROCEDURE cmdSort.Click
		THISFORM.DoSort
		THISFORM.Release
		
	ENDPROC

	PROCEDURE opgDirection.Init
		IF ATC(" DESCENDING",SET("ORDER"))#0
			THIS.Value = 2
		ENDIF
		
	ENDPROC

	PROCEDURE _cboTags.Init
		LOCAL nTotalTags,i
		nTotalTags = TAGCOUNT('')
		
		IF nTotalTags = 0
			WAIT WINDOW ERR_NOTAGS_LOC
			RETURN .F.
		ENDIF
		
		THIS.AddItem(C_NONE_LOC)
		FOR i = 1 TO m.nTotalTags
			THIS.AddItem(TAG(m.i))
		ENDFOR
		
		THIS.Value = IIF(EMPTY(TAG()),C_NONE_LOC,TAG())
		IF THIS.Value = C_NONE_LOC
			THIS.Parent.opgDirection.Option1.Enabled = .F.
			THIS.Parent.opgDirection.Option2.Enabled = .F.
		ENDIF
		
	ENDPROC

	PROCEDURE _cboTags.InteractiveChange
		THIS.Parent.opgDirection.Option1.Enabled = (THIS.Value # C_NONE_LOC)
		THIS.Parent.opgDirection.Option2.Enabled = (THIS.Value # C_NONE_LOC)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS _sortselect AS _container OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cusTableSort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSortUp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSortDown" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: dosort		&& Runs sort routine.
	*</DefinedPropArrayMethod>

	Height = 22
	Name = "_sortselect"
	Width = 47

	ADD OBJECT 'cmdSortDown' AS _commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "", ;
		Height = 22, ;
		Left = 23, ;
		Name = "cmdSortDown", ;
		Picture = graphics\sortdown.bmp, ;
		ToolTipText = "Sort Descending", ;
		Top = 0, ;
		Width = 23, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSortUp' AS _commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "", ;
		Height = 22, ;
		Left = 0, ;
		Name = "cmdSortUp", ;
		Picture = graphics\sortup.bmp, ;
		ToolTipText = "Sort Ascending", ;
		Top = 0, ;
		Width = 23, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="_base.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cusTableSort' AS _tablesort WITH ;
		Left = 12, ;
		Name = "cusTableSort", ;
		Top = 0
		*< END OBJECT: ClassLib="_table.vcx" BaseClass="custom" />
	
	PROCEDURE dosort		&& Runs sort routine.
		LPARAMETER lDescending
		THIS.cusTableSort.lDescending = m.lDescending
		THIS.cusTableSort.DoSort()
	ENDPROC

	PROCEDURE cmdSortDown.Click
		THIS.Parent.DoSort(.T.)
	ENDPROC

	PROCEDURE cmdSortUp.Click
		THIS.Parent.DoSort()
	ENDPROC

ENDDEFINE

DEFINE CLASS _tbrnavigation AS _toolbar OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="toolbar" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="_nav4picbuttons" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Separator2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="_goto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Separator1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="_sortselect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdFilter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLocate" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: calias		&& Current alias.
		*p: ldisabledformodal
	*</DefinedPropArrayMethod>

	calias = 		&& Current alias.
	Caption = "Navigation"
	Height = 28
	Left = 0
	Name = "_tbrnavigation"
	Top = 0
	Width = 291

	ADD OBJECT '_goto' AS _goto WITH ;
		Left = 105, ;
		Name = "_goto", ;
		Top = 3, ;
		cusTableNav.Name = "cusTableNav", ;
		spnGoTo.Name = "spnGoTo"
		*< END OBJECT: ClassLib="_table2.vcx" BaseClass="container" />

	ADD OBJECT '_nav4picbuttons' AS _nav4picbuttons WITH ;
		Height = 22, ;
		Left = 5, ;
		Name = "_nav4picbuttons", ;
		Top = 3, ;
		Width = 93, ;
		cmdBottom.Height = 22, ;
		cmdBottom.Left = 70, ;
		cmdBottom.Name = "cmdBottom", ;
		cmdBottom.Top = 0, ;
		cmdBottom.Width = 23, ;
		cmdTop.Height = 22, ;
		cmdTop.Left = 1, ;
		cmdTop.Name = "cmdTop", ;
		cmdTop.Top = 0, ;
		cmdTop.Width = 23, ;
		cmgNav.BorderStyle = 0, ;
		cmgNav.Command1.Height = 22, ;
		cmgNav.Command1.Left = 16, ;
		cmgNav.Command1.Name = "Command1", ;
		cmgNav.Command1.Top = 0, ;
		cmgNav.Command1.Width = 23, ;
		cmgNav.Command2.Height = 22, ;
		cmgNav.Command2.Left = 39, ;
		cmgNav.Command2.Name = "Command2", ;
		cmgNav.Command2.Top = 0, ;
		cmgNav.Command2.Width = 23, ;
		cmgNav.Name = "cmgNav", ;
		cusTableNav.Height = 13, ;
		cusTableNav.Left = 68, ;
		cusTableNav.Name = "cusTableNav", ;
		cusTableNav.Top = 5, ;
		cusTableNav.Width = 17
		*< END OBJECT: ClassLib="_table2.vcx" BaseClass="container" />

	ADD OBJECT '_sortselect' AS _sortselect WITH ;
		Height = 22, ;
		Left = 196, ;
		Name = "_sortselect", ;
		Top = 3, ;
		Width = 46, ;
		cmdSortDown.Name = "cmdSortDown", ;
		cmdSortUp.Name = "cmdSortUp", ;
		cusTableSort.Name = "cusTableSort"
		*< END OBJECT: ClassLib="_table2.vcx" BaseClass="container" />

	ADD OBJECT 'cmdFilter' AS _filterbutton WITH ;
		Caption = "", ;
		Height = 22, ;
		Left = 241, ;
		Name = "cmdFilter", ;
		Picture = graphics\filter.bmp, ;
		ToolTipText = "Set Filter...", ;
		Top = 3, ;
		Width = 23
		*< END OBJECT: ClassLib="_table2.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLocate' AS _locatebutton WITH ;
		Caption = "", ;
		Height = 22, ;
		Left = 263, ;
		Name = "cmdLocate", ;
		Picture = graphics\find.bmp, ;
		ToolTipText = "Locate...", ;
		Top = 3, ;
		Width = 23
		*< END OBJECT: ClassLib="_table2.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Separator1' AS separator WITH ;
		Height = 55249180, ;
		Left = 196, ;
		Name = "Separator1", ;
		Top = 3, ;
		Width = 55249180
		*< END OBJECT: BaseClass="separator" />

	ADD OBJECT 'Separator2' AS separator WITH ;
		Height = 30742164, ;
		Left = 105, ;
		Name = "Separator2", ;
		Top = 3, ;
		Width = 30742164
		*< END OBJECT: BaseClass="separator" />
	
	PROCEDURE Refresh
		LOCAL lcDataSession
		IF NOT THIS.lDisabledForModal
		  lcDataSession=SET("DataSession")
		  IF TYPE("_screen.activeform.name")="C"
			  SET DataSession TO _screen.activeform.DataSessionID
		  ENDIF
		  THIS.cAlias = ALIAS()
		  STORE THIS.cAlias TO ;
		        THIS._GoTo.cusTableNav.cAlias, ;
		        THIS._Nav4picbuttons.cusTableNav.cAlias, ;
		        THIS._SortSelect.cusTableSort.cAlias
		  THIS.Setall("Enabled",NOT EMPTY(THIS.cAlias))
		  THIS._GoTo.InitData()
		  DODEFAULT()
		  SET DataSession TO lcDataSession
		ENDIF
		
	ENDPROC

	PROCEDURE _nav4picbuttons.tablenav
		LPARAMETERS tcAction
		IF EMPTY(tcAction) OR VARTYPE(tcAction)#"C"
		  RETURN
		ENDIF  
		DODEFAULT(tcAction)
		THISFORM.REFRESH()
	ENDPROC

ENDDEFINE
